This repository contains a script for generating the files needed to
make `SALT <https://www.salt.ac.za/>`_ RSS slit masks using data from
large photometric surveys.

The code makes use of the `zCluster <https://github.com/ACTCollaboration/zCluster>`_ package.
For the moment, you will need to have installed the latest version
of ``zCluster`` from the ``master`` branch.

The ``pySlitMask.py`` script by Steve Crawford (and possibly updated
by others) is needed to turn the files generated by the script in
this repository into SALT slit mask files.

This work is based on old code used in past SALT programmes by
Matt Hilton. This version is geared towards producing slit masks for
the SMERGHERS project, which is targeting clusters at intermediate
redshifts (0.4 < z < 0.6). This affects some of the choices made for
e.g. plotting that are currently hardcoded, but could be made
adjustable from the config file.

Please use the `GitHub issues page <https://github.com/mattowl/rss-mask-design/issues>`_,
and/or contact `Matt Hilton <mailto:matt.hilton@mykolab.com>`_ with
any comments, questions, or bug reports.

If by some miracle this code is useful for your work, please cite
the paper which describes the first use of the algorithm used here,
which is `Kirk et al. (2015) <https://ui.adsabs.harvard.edu/abs/2015MNRAS.449.4010K/abstract>`_.


Workflow
--------

Here we use the example configuration found in ``configs/J0034.yml``.
Note the parameters (colour and mag cuts) used in here are not
guaranteed to be optimal (this file was adapted for an old run where
SDSS photometry was used; here we use DECaLS which doesn't have an
*i*-band).

#. Clone this repository. You can then work in the repository directory
   itself.

#. Edit the configuration ``.yml`` file you want to use. At this stage
   you won't be able to enter ``refStarIDs``. Run the script like this::

       python3 makeSALTSlitMaskFiles.py configs/J0034.yml

#. Inspect the DSS image, noting down ID numbers for 4 stars to use as
   slit mask alignment stars. The following command loads the DSS image
   into DS9 and overplots stars that should have suitable brightness for
   use as alignment stars::

       ds9 MaskFiles_J0034.4+0225/DSS_J0034.4+0225.fits -regions MaskFiles_J0034.4+0225/brightStars.reg

   You should pick stars that are as widely distributed across the RSS
   field of view (represented by the large green circle in the DS9
   regions) as possible. Your reference stars should have similar
   magnitudes.

   Add the ID numbers of your chosen stars to the configuration ``.yml``
   file in the ``refStarIDs`` list.

#. Run the script again::

       python3 makeSALTSlitMaskFiles.py configs/J0034.yml

   This time it will give priority to the chosen alignment stars and
   include these across all masks.

   You can inspect the region files and plots made for each slit mask
   under the output directory (in this case ``MaskFiles_J0034.4+0225``).

   Useful files include:

   * A colour--magnitude diagram that you may use to adjust your
     target cuts (``CMD.png``).

   * Colour images with target objects marked (``RGB_SlitsLoc_Mask?.png``).

   * Finder-chart type images (DSS image in the background) with
     both target objects and alignment stars marked (``*_slitData_Mask?.png``)

#. Once you are happy with the slit mask designs produced by the script,
   you must use the ``pySlitMask.py`` tool to convert these into the format
   needed by SALT.

   Use:

   * PA = 180 deg for objects with declination > -35 degrees
   * PA = 0 deg for objects with declination < -35 degrees


Generating configs for a list of targets
----------------------------------------

See the script ``makeConfigsFromPIPTTargets.py``, which generates config files
based on the file ``pipt-format-targets.csv``.
